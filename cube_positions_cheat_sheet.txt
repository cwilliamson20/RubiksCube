Cube Side Indices:
index:   0     1      2    3       4      5
side:  back, front, left, right, bottom, top

multiple rotation indices:
6: rotate middle same direction as default top, E for equator
7: rotate top, equator, bottom at the same time, clockwise from the top

Reverse Regular Rotation Indices: (* means not implemented yet)
index:   8    9     10    11      12    13     14 
side:  back, front, left, right, bottom, top, equator

15: rotate entire cube counterclockwise from the top

Front Layer:
0   1   2
3   4   5  
6   7   8

Middle Layer:
9   10  11
12  13  14      
15  16  17

Back Layer:
18  19  20  
21  22  23  
24  25  26

cube_cur_position: 
cube at index x in cubes has its current physical position at index x in this array
should be drawn at tracked at position x in cube_cur_positions
if cube_cur_positions matches {0, 1, ..., 26} then the cube is solved

design documentation:
what should happen when you try to turn a cube layer:
1. turn key is picked up by processInput
    rs.rotation_side is set depending on the key hit 
    rotateSide(cur_frame) is called
2. rotateSide: sets is_rotating to true, sets rotation_start_frame
3. rs.updateRotation, which is running every frame, notices that is_rotating is true
    slice_angle is chosen based on rs.rotation_side, which influences what angle the turn goes to
    rs.cur_angle calculated based on cur_frame and slice angle to make animation
4. once cur_frame is frames_per_rotation past the start frame, updateRotation sets:
    is_rotating = false
    returns true
main is listening to see if updateRotation just finished so then it calls finishSideRotation
5. finishSideRotation: changes cube_cur_positions to point each cube to a new transform
also rotates colors on each cube to make them look correct without actually having to rotate them all the time





CONTROLS:
Camera movement: 
    W: forward
    A: left
    S: backward
    D: right
    Left Alt: down
    Space: up
    H: return camera to start x position (height/zoom doesn't change)

Camera Speed:
    Up Arrow: increase speed
    Down Arrow: decrease speed

Cube rotations (from perspective of camera home):   
    Shift modifier does these turns in the opposite direction
    R: right
    L: left
    F: front
    B: back
    U: up
    V: down

M: change view between stickered and not stickered
N: change color scheme (when cube is solved)
1: scramble cube
I: insert left
O: insert right
2: make yellow cross 
3: make yellow top
4: flip front top 2 corners
5: rotate center top colors clockwise
6: rotate center top colors counter-clockwise






